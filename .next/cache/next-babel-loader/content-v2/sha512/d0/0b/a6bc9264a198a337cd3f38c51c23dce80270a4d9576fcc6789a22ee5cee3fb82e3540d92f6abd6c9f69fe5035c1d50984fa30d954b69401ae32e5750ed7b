{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbook/Desktop/web/nextjs/podcasts/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/macbook/Desktop/web/nextjs/podcasts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/macbook/Desktop/web/nextjs/podcasts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/macbook/Desktop/web/nextjs/podcasts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbook/Desktop/web/nextjs/podcasts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/macbook/Desktop/web/nextjs/podcasts/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/macbook/Desktop/web/nextjs/podcasts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbook/Desktop/web/nextjs/podcasts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/macbook/Desktop/web/nextjs/podcasts/pages/channel.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport PodcastList from '../components/PodcastList.jsx';\nimport Series from '../components/Series';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          audioClips = _this$props.audioClips,\n          series = _this$props.series;\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        title: channel.title,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: channel.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Series, {\n          series: series\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PodcastList, {\n          audioClips: audioClips\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var query, idChannel, _yield$Promise$all, _yield$Promise$all2, reqChannel, reqAudios, reqSeries, dataChannel, channel, dataAudios, audioClips, dataSeries, series;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query;\n                _context.prev = 1;\n                idChannel = query.id;\n                _context.next = 5;\n                return Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/child_channels\"))]);\n\n              case 5:\n                _yield$Promise$all = _context.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n                reqChannel = _yield$Promise$all2[0];\n                reqAudios = _yield$Promise$all2[1];\n                reqSeries = _yield$Promise$all2[2];\n                _context.next = 12;\n                return reqChannel.json();\n\n              case 12:\n                dataChannel = _context.sent;\n                channel = dataChannel.body.channel;\n                _context.next = 16;\n                return reqAudios.json();\n\n              case 16:\n                dataAudios = _context.sent;\n                audioClips = dataAudios.body.audio_clips;\n                _context.next = 20;\n                return reqSeries.json();\n\n              case 20:\n                dataSeries = _context.sent;\n                series = dataSeries.body.channels;\n                return _context.abrupt(\"return\", {\n                  channel: channel,\n                  audioClips: audioClips,\n                  series: series\n                });\n\n              case 25:\n                _context.prev = 25;\n                _context.t0 = _context[\"catch\"](1);\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 25]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/macbook/Desktop/web/nextjs/podcasts/pages/channel.jsx"],"names":["React","Link","Layout","PodcastList","Series","props","channel","audioClips","series","title","query","idChannel","id","Promise","all","fetch","reqChannel","reqAudios","reqSeries","json","dataChannel","body","dataAudios","audio_clips","dataSeries","channels","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;;;;;;;;;;;;6BAgCa;AAAA,wBAEmC,KAAKC,KAFxC;AAAA,UAEGC,OAFH,eAEGA,OAFH;AAAA,UAEYC,UAFZ,eAEYA,UAFZ;AAAA,UAEwBC,MAFxB,eAEwBA,MAFxB;AAIL,0BAAO,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEF,OAAO,CAACG,KAAvB;AAAA,gCACH;AAAA,oBAAKH,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,gBADG,eAGH,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAGD;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAHG,eAKH,QAAC,WAAD;AAAa,UAAA,UAAU,EAAGD;AAA1B;AAAA;AAAA;AAAA;AAAA,gBALG;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAQH;;;;;;;;;;;AAxC6BG,gBAAAA,K,QAAAA,K;;AAGlBC,gBAAAA,S,GAAYD,KAAK,CAACE,E;;uBAE2BC,OAAO,CAACC,GAAR,CAAY,CACzDC,KAAK,8CAAuCJ,SAAvC,EADoD,EAEzDI,KAAK,8CAAuCJ,SAAvC,kBAFoD,EAGzDI,KAAK,8CAAuCJ,SAAvC,qBAHoD,CAAZ,C;;;;;AAA1CK,gBAAAA,U;AAAYC,gBAAAA,S;AAAWC,gBAAAA,S;;uBAOJF,UAAU,CAACG,IAAX,E;;;AAApBC,gBAAAA,W;AACAd,gBAAAA,O,GAAUc,WAAW,CAACC,IAAZ,CAAiBf,O;;uBAERW,SAAS,CAACE,IAAV,E;;;AAAnBG,gBAAAA,U;AACAf,gBAAAA,U,GAAae,UAAU,CAACD,IAAX,CAAgBE,W;;uBAEVL,SAAS,CAACC,IAAV,E;;;AAAnBK,gBAAAA,U;AACAhB,gBAAAA,M,GAASgB,UAAU,CAACH,IAAX,CAAgBI,Q;iDAExB;AAAEnB,kBAAAA,OAAO,EAAPA,OAAF;AAAWC,kBAAAA,UAAU,EAAVA,UAAX;AAAuBC,kBAAAA,MAAM,EAANA;AAAvB,iB;;;;;;;;;;;;;;;;;;;;;;;EAvBUR,KAAK,CAAC0B,S","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\n\nimport Layout from '../components/Layout'\nimport PodcastList from '../components/PodcastList.jsx'\nimport Series from '../components/Series'\n\nexport default class extends React.Component{\n\n    static async getInitialProps({query}) {\n\n        try{\n            let idChannel = query.id\n\n            const [reqChannel, reqAudios, reqSeries] = await Promise.all([\n                fetch(`https://api.audioboom.com/channels/${idChannel}`),\n                fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\n                fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\n            ])\n\n\n            const dataChannel = await reqChannel.json()\n            const channel = dataChannel.body.channel\n            \n            const dataAudios = await reqAudios.json()        \n            const audioClips = dataAudios.body.audio_clips\n\n            const dataSeries = await reqSeries.json()\n            const series = dataSeries.body.channels\n\n            return { channel, audioClips, series }\n        } catch(e){\n            \n        }\n    \n    }\n\n    render() {\n\n        const { channel, audioClips, series } = this.props\n\n        return <Layout title={channel.title}>\n            <h1>{channel.title}</h1>\n\n            <Series series= {series} />\n\n            <PodcastList audioClips={ audioClips } />\n\n        </Layout>\n    }\n}"]},"metadata":{},"sourceType":"module"}